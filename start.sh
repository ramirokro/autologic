#!/bin/bash

echo "üöÄ Iniciando Autologic - Plataforma de diagn√≥stico automotriz"
echo "============================================================="
echo ""

# Verificar existencia de directorios principales
if [ ! -d "frontend" ] || [ ! -d "backend" ]; then
  echo "‚ùå Error: No se encontraron los directorios frontend o backend"
  echo "Verifique que est√° ejecutando este script desde el directorio ra√≠z del proyecto"
  exit 1
fi

# Iniciar backend en background
echo "üîß Iniciando servidor backend (FastAPI)..."
(cd backend && python -m uvicorn app.main:app --reload --host 0.0.0.0 --port 8000) &
BACKEND_PID=$!

# Peque√±a pausa para que el backend inicie
sleep 2

# Verificar que el backend est√© corriendo
if ! ps -p $BACKEND_PID > /dev/null; then
  echo "‚ùå Error: El servidor backend no se pudo iniciar"
  exit 1
fi

echo "‚úÖ Servidor backend iniciado en: http://localhost:8000"
echo "   Documentaci√≥n de la API: http://localhost:8000/docs"
echo ""

# Iniciar frontend
echo "üåê Iniciando aplicaci√≥n frontend (React)..."
echo "El servidor http://localhost:5000 es el servidor de producci√≥n integrado (backend+frontend)"
echo "Accede a la aplicaci√≥n en: http://localhost:5000"
echo ""

# Definir funci√≥n para limpiar procesos al salir
cleanup() {
  echo ""
  echo "üõë Deteniendo servicios..."
  kill $BACKEND_PID 2>/dev/null
  echo "‚úÖ Servidor detenido"
  exit 0
}

# Configurar trap para SIGINT (Ctrl+C)
trap cleanup SIGINT

# Mantener el script ejecut√°ndose para mostrar logs
echo "üìù Registros del servidor (presiona Ctrl+C para detener):"
echo "--------------------------------------------------------"
tail -f backend/uvicorn.log 2>/dev/null || echo "No se puede acceder al archivo de logs"

# Este c√≥digo nunca se ejecuta por el tail -f, pero si por alguna raz√≥n termina, limpiamos
cleanup